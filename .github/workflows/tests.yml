# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

# When to run this action
on:
  push:
    branches:
      - 'main'
      - 'dev'

  pull_request:
    branches: [ "main" ]

# What actions to run
jobs:
  # Validate code using online validator
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Validate HTML & css
        # Change validator to the one used on W3C's website (try to see if any of these work)
        # uses: validator/validator@main
        # uses: w3c/markup-validator@master
        uses: NTIG-Uppsala/html5validator-action@master
        with:
          root: root/
          log_level: DEBUG
          css: true
          extra: --show-warnings
      - name: Create log artifact
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: log
          path: log.log

  # Runs tests
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f test/test_requirements.txt ]; then pip install -r test/test_requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Test with pytest
      #   run: python test/test.py
      - name: start live server # Start a live-server for testing the webpage content
        run: |
          cd root/
          python -m http.server &

      - name: Run unit test for Swedish website.
        run: python test/test.py http://localhost:8000/

      - name: Run unit test for Finnish website.
        if: ${{ always() }}
        run: python test/testfi.py http://localhost:8000/

      - name: Run unit test for Swedish website in Luleå.
        if: ${{ always() }}
        run: python test/testLu.py http://localhost:8000/

      - name: Run unit test for Finnish website in Luleå.
        if: ${{ always() }}
        run: python test/testLuFi.py http://localhost:8000/

  # Runs screenshot tests
  screenshot:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: installing chromium
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update 
          sudo apt-get install -y google-chrome-stable
        # run: |
        #   wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
        #   apt-get update && apt-get -y install google-chrome-stable

      

      - name: Starting live server
        run: npx serve root/ &

      - name: Installing dependencies
        run: npm ci
      
      - name: Run screenshot script
        run: npm run takescreenshots --no-sandbox

      - name: Upload screenshots as artifact
        uses: actions/upload-artifact@v2 # Uplaod screenshots to Actions Artifacts via actions/upload-artifact@v2
        with:
          path: screenshots/
          name: Page screenshots

  # Deploys page with GitHub Pages
  deploy:
    if: github.ref_name == 'main'
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest

    needs: [test, validate]

    permissions:
      contents: write

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Deploy 🚀
        uses: NTIG-Uppsala/github-pages-deploy-action@v4
        with:
          folder: root # The folder the action should deploy.
